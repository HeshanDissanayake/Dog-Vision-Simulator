# -*- coding: utf-8 -*-
"""opencvtest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vjpEos-czB-09CavV-a9HO7pZzd4lLoH
"""

import cv2 as cv
import numpy as np
import time 

img = cv.imread("/home/heshds/fiverr/panaroma_video/photos/1.jpeg")
t1 = time.time()
for i in range(img.shape[0]):
    for j in range(img.shape[1]):
        pixel = img[i][j]
        blue = pixel[0]
        green = pixel[1]
        red = pixel[2]
        pixel_avg = np.mean(pixel)
        if (red >= pixel_avg and green >= pixel_avg):
          red = np.mean([green, red])
          green = np.mean([green, red])
        elif (red >= pixel_avg and green < pixel_avg):
          red = np.mean([green, blue])
          green = np.mean([green, blue])
        elif (red < pixel_avg and green >= pixel_avg):
          red = np.mean([green, red])
          green = np.mean([green, red])
        elif (red < pixel_avg and green < pixel_avg):
          green = np.mean([red,green])
          red = np.mean([red,green])
        pixel = [blue, green, red]
        img[i][j] = pixel
t2 = time.time()

print(t2-t1)

blurAmount = int(0.05*img.shape[0])
if (np.mod(blurAmount,2) == 0):
  blurAmount = blurAmount + 1
img = cv.GaussianBlur(img,(blurAmount,blurAmount),0)
cv.imwrite("sample1.jpg",img)

import cv2 as cv
import numpy as np

img = cv.imread("leaves.jpeg")
for i in range(img.shape[0]):
    for j in range(img.shape[1]):
        pixel = img[i][j]
        blue = pixel[0]
        green = pixel[1]
        red = pixel[2]
        pixel_avg = np.mean(pixel)
        if (red >= pixel_avg and green >= pixel_avg):
          red = np.mean([green, red])
          green = np.mean([green, red])
        elif (red >= pixel_avg and green < pixel_avg):
          red = np.mean([green, blue])
          green = np.mean([green, blue])
        elif (red < pixel_avg and green >= pixel_avg):
          red = np.mean([green, red])
          green = np.mean([green, red])
        elif (red < pixel_avg and green < pixel_avg):
          green = np.mean([red,green])
          red = np.mean([red,green])
        pixel = [blue, green, red]
        img[i][j] = pixel
blurAmount = int(0.05*img.shape[0])
if (np.mod(blurAmount,2) == 0):
  blurAmount = blurAmount + 1
img = cv.GaussianBlur(img,(blurAmount,blurAmount),0)
cv.imwrite("sample1.jpg",img)